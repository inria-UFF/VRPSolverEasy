Customer
======================================

This is a guide to install the package  your routing problems using python class

The quick summary is:

#. Fork the repo.
#. Clone your forked repo.
#. Install dependencies.
#. Make your changes.



On top of having python installed, we will be using git and the command line. Also, we assume you have a github account and know how to fork a project.
We will use plain git through the command line but feel free to use the git client of your choice.


Cloning the project
----------------------------

You first need to download the pulp project from your fork. In the following command replace ``username`` ::

    git clone git@github.com:pchtsp/pulp.git

That's it, you will download the whole project.


Installing from source
----------------------------

To build the software from source we will get inside the directory, then  we will install package by using ``setup.py``::

    cd Unziped-directory
    python -m pip install setup.py

This will link the pulp version on your virtual environment with the source files in the pulp directory. You can now use pulp from that virtual environment and you will be using the files in the pulp directory. We assume you have run this successfully for all further steps.

Running tests
----------------

To run tests of pulp you need to run::

    cd VRPSolverEasy-directory
    python VRPSolverEasy/tests/units_tests.py

It will detect the solvers in your system and test all of the ones it finds.

Creating a test
-----------------

When you fix an issue in pulp or add a functionality, you should add a test to the repository. For this you should go to the file `tests/test_pulp.py` and add a new method that tests your change.

Applying the flake8 linter / formatter
-----------------------------------------------------

Before sending your changes, be sure to execute the black package to style the resulting files.
The quickest way to do this is to run:

    python -m flake8 pulp

And it will do the changes directly on the files.

The easiest way is to integrate it inside your IDE so it runs every time you save a file. Learn how to do that `in the black integration docs <https://black.readthedocs.io/en/stable/integrations/editors.html>`_.

Building the documentation
----------------------------

The documentation is based in `Sphinx and reStructuredText <https://www.sphinx-doc.org/en/master/usage/restructuredtext/index.html>`_.

To build the documentation::

    cd pulp/doc
    make html

A folder named html will be created inside the ``build/`` directory. The home page for the documentation is ``doc/build/html/index.html`` which can be opened in a browser.
You only need to execute ``make html`` to rebuild the docs each time.